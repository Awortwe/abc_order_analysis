CREATE DATABASE abc_orders DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE abc_orders;
SHOW TABLES;
SELECT * FROM account;
SELECT * FROM orders;
SELECT * FROM products; 

DESCRIBE orders;
UPDATE orders
SET order_date = STR_TO_DATE(order_date,'%m/%d/%Y'),
ship_date = STR_TO_DATE(ship_date,'%m/%d/%Y');

ALTER TABLE orders
MODIFY COLUMN order_date DATE,
MODIFY COLUMN ship_date DATE;

-- CHECKING FOR NULL VALUES
SELECT count(*) FROM orders
WHERE order_no IS NULL;

-- CHECKING FOR DUPLICATES
SELECT order_no, count(order_no)
FROM orders
GROUP BY order_no
HAVING count(order_no) > 1;

SELECT * FROM orders
WHERE order_no = '5768-2' OR order_no = '6159-2';

-- -------------------- DATA EXPLORATION -----------------------------

-- 1. What is the total revenue generated by each product category?
SELECT * FROM orders;
SELECT * FROM products;

SELECT p.product_category, 
ROUND(sum(o.total),2) AS TotalRevenue
FROM products p INNER JOIN orders o
ON p.product_id = o.product_id
GROUP BY p.product_category
ORDER BY TotalRevenue DESC;

-- 2.	How many unique products have been ordered?
SELECT count(DISTINCT product_name)`Number of products` FROM products;

-- 3.	What is the total revenue generated each year?
SELECT YEAR(order_date)`Year`,
FORMAT(sum(total),2)`Total Revenue` 
FROM orders
GROUP BY YEAR(order_date)
ORDER BY `Total Revenue` DESC;


-- 4.	What is the date of the latest and earlier order?
SELECT MIN(order_date)`Earliest Date`,
MAX(order_date)`Latest Date` 
FROM orders;

-- 5.	What product category has the lowest average price of products?
SELECT * FROM products;
SELECT * FROM orders;

-- USING JOIN STATEMENT
SELECT p.product_category,
round(avg(o.retail_price),2)average_price
FROM products p INNER JOIN orders o 
ON p.product_id = o.product_id
GROUP BY p.product_category
ORDER BY average_price
LIMIT 1;

-- USING SUB QUERY
WITH average_price AS (
SELECT product_id, avg(retail_price)average_price
FROM orders
GROUP BY product_id
ORDER BY average_price
LIMIT 1
)
SELECT p.product_category
FROM products p INNER JOIN average_price a
ON p.product_id = a.product_id;

-- 6.	What are the top 10 highest performing products?
SELECT p.product_name,
ROUND(sum(o.total),2)Revenue
FROM products p INNER JOIN orders o
ON p.product_id = o.product_id
GROUP BY p.product_name
ORDER BY Revenue DESC
LIMIT 10;

-- 7.	Show the total revenue and profit generated by each account manager
SELECT * FROM account;
SELECT * FROM orders;

SELECT account_manager,
round(sum(total),2)Revenue,
round(sum(total)-sum(cost_price),2)Profit
FROM account INNER JOIN orders
USING(account_id)
GROUP BY account_manager
ORDER BY account_manager;

-- 8.	What is the name, city and account manager of the highest selling product in 2017?
SELECT * FROM orders;
SELECT * FROM account;
SELECT * FROM products;

SELECT p.product_name,
a.account_manager,
o.city,
round(sum(o.total),2)Revenue
FROM products p INNER JOIN orders o
ON p.product_id = o.product_id
INNER JOIN account a 
ON o.account_id = a.account_id
WHERE YEAR(order_date) = 2017
GROUP BY p.product_name, a.account_manager, o.city
ORDER BY Revenue DESC
LIMIT 1;

-- 9.	Find the mean amount spent per order by each customer type
SELECT customer_type,
ROUND(avg(total),2)Mean_Amount 
FROM orders
GROUP BY customer_type
ORDER BY Mean_Amount DESC;

-- 10.	What is the 5th highest selling product?
SELECT * FROM products;
SELECT * FROM orders;

SELECT product_name,
round(sum(total),2)Revenue
FROM products INNER JOIN orders
USING (product_id)
GROUP BY product_name
ORDER BY Revenue DESC
LIMIT 1 OFFSET 4;

